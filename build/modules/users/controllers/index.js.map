{"version":3,"sources":["../../../../server/modules/users/controllers/index.js"],"names":["getAllUser","addUser","getUser","req","res","next","find","status","sort","createdAt","exec","err","users","console","log","json","success","message","data","body","newUser","Object","assign","password","generateHash","save","user","findById","params","_id"],"mappings":";;;;;QAKgBA,U,GAAAA,U;QAmBAC,O,GAAAA,O;QAqBAC,O,GAAAA,O;;AA7ChB;;;;;;AAEA;;;AAGO,SAASF,UAAT,CAAoBG,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AACzC,kBAAKC,IAAL,CAAU;AACRC,YAAQ;AADA,GAAV,EAEGC,IAFH,CAEQ;AACNC,eAAW,CAAC;AADN,GAFR,EAIGC,IAJH,CAIQ,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACtB,QAAID,GAAJ,EAAS,OAAON,KAAKM,GAAL,CAAP;AACTE,YAAQC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACA,WAAOR,IAAIG,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AAC1BC,eAAS,IADiB;AAE1BC,eAAS,cAFiB;AAG1BC,YAAMN;AAHoB,KAArB,CAAP;AAKD,GAZD;AAaD;;AAED;;;AAGO,SAASX,OAAT,CAAiBE,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AACtCQ,UAAQC,GAAR,CAAY,qBAAZ,EAAmCX,IAAIgB,IAAvC;AACA,MAAMC,UAAU,qBAAhB;AACAC,SAAOC,MAAP,CAAcF,OAAd,EAAuBjB,IAAIgB,IAA3B,EAAiC;AAC/BI,cAAUH,QAAQI,YAAR,CAAqBrB,IAAIgB,IAAJ,CAASI,QAA9B;AADqB,GAAjC;AAGAV,UAAQC,GAAR,CAAY,oBAAZ,EAAkCM,OAAlC;AACAA,UAAQK,IAAR,CAAa,UAAUd,GAAV,EAAee,IAAf,EAAqB;AAChC,QAAIf,GAAJ,EAAS,OAAON,KAAKM,GAAL,CAAP;;AAET,WAAOP,IAAIG,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AAC1BC,eAAS,IADiB;AAE1BC,eAAS,eAFiB;AAG1BC,YAAMQ;AAHoB,KAArB,CAAP;AAKD,GARD;AASD;;AAED;;;AAGO,SAASxB,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AACtC,kBAAKsB,QAAL,CAAcxB,IAAIyB,MAAJ,CAAWC,GAAzB,EAA8BnB,IAA9B,CAAmC,UAACC,GAAD,EAAMe,IAAN,EAAe;AAChD,QAAIf,GAAJ,EAAS,OAAON,KAAKM,GAAL,CAAP;;AAET,WAAOP,IAAIG,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB;AAC1BC,eAAS,IADiB;AAE1BC,eAAS,UAFiB;AAG1BC,YAAMQ;AAHoB,KAArB,CAAP;AAKD,GARD;AASD","file":"index.js","sourcesContent":["import User from '../models/index.js';\n\n/**\n * get users\n */\nexport function getAllUser(req, res, next) {\n  User.find({\n    status: 'Active',\n  }).sort({\n    createdAt: -1,\n  }).exec((err, users) => {\n    if (err) return next(err);\n    console.log('getAllUser(users): ', users);\n    return res.status(200).json({\n      success: true,\n      message: 'Get all user',\n      data: users,\n    });\n  });\n}\n\n/**\n * add user\n */\nexport function addUser(req, res, next) {\n  console.log('addUser(req.body): ', req.body);\n  const newUser = new User();\n  Object.assign(newUser, req.body, {\n    password: newUser.generateHash(req.body.password),\n  });\n  console.log('addUser(newUser): ', newUser);\n  newUser.save(function (err, user) {\n    if (err) return next(err);\n\n    return res.status(201).json({\n      success: true,\n      message: 'Created user!',\n      data: user,\n    });\n  });\n}\n\n/**\n * get user\n */\nexport function getUser(req, res, next) {\n  User.findById(req.params._id).exec((err, user) => {\n    if (err) return next(err);\n\n    return res.status(200).json({\n      success: true,\n      message: 'Get user',\n      data: user,\n    });\n  });\n}\n"]}